---
- hosts: all
  remote_user: jon
  vars:
    user: jon
    home_dir: "/home/{{ user }}"
    root_domain: form.jonc.dev
    admin_email: me@jonc.dev
    repo: django_form
    repo_url: "git@github.com:joncinque/{{ repo }}.git"
    repo_dir: "{{ home_dir }}/src/{{ repo }}"
    venv_dir: "{{ repo_dir }}/venv"
    requirements_file: "{{ repo_dir }}/requirements.txt"
    app_dir: "{{ repo_dir }}/{{ repo }}"
    force_ssl: true
    supervisor_conf: "/etc/supervisor/conf.d/{{ repo }}.conf"
    dbname: "{{ repo }}.db"
    priv_key: "{{ home_dir }}/{{ repo }}.pk"
  tasks:
    - name: Including vars
      include_vars: vars.yml
      tags: always

    - name: Installing base python packages
      become: true
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
        cache_valid_time: 604800
      vars:
        packages:
        - git
        - supervisor
        - python3
        - python3-venv
        - python3-pip

    - name: Copy over private key
      become: true
      copy:
        src: "{{ local_key }}"
        dest: "{{ priv_key }}"
        mode: 0600
        owner: yoga
        group: yoga

    - name: Checking out site code
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        depth: 1
        key_file: "{{ priv_key }}"
        accept_hostkey: yes
        force: yes
      tags: code, test

    - name: Creating virtualenv with pip
      pip:
        virtualenv: "{{ venv_dir }}"
        virtualenv_command: /usr/bin/python3 -m venv
        name: pip
        state: latest

    - name: Installing requirements
      pip:
        executable: "{{ venv_dir }}/bin/pip"
        requirements: "{{ requirements_file }}"
      tags: code

    - name: Migrating db with django migrate
      django_manage:
        command: migrate
        app_path: "{{ repo_dir }}"
        virtualenv: "{{ venv_dir }}"
      tags: code

    - name: Add test data
      django_manage:
        command: encounters_prime
        app_path: "{{ repo_dir }}"
        virtualenv: "{{ venv_dir }}"
      tags: code

    - name: Deploying supervisor conf file
      become: true
      template:
        src: supervisor.conf.j2
        dest: "{{ supervisor_conf }}"
      tags: deploy

    - name: Restarting process
      become: true
      supervisorctl: "name={{ repo }} state=restarted"
      tags: [deploy, code]

    - name: Getting keys through certbot
      include_role: name=geerlingguy.certbot
      vars:
        certbot_admin_email: "{{ admin_email }}"
        certbot_create_if_missing: true
        certbot_create_standalone_stop_services: ['nginx']
        certbot_auto_renew_user: root
        certbot_auto_renew_minute: 30
        certbot_auto_renew_hour: 3
        certbot_auto_renew_options: "--quiet --no-self-upgrade --pre-hook='systemctl stop nginx' --post-hook='systemctl start nginx'"
        certbot_certs:
          - domains:
            - "{{ root_domain }}"
        ansible_become: true
      tags: certbot

    - name: Setting up nginx
      include_role: name=jdauphant.nginx
      vars:
        nginx_http_params:
          - sendfile on
          - access_log /var/log/nginx/access.log
        nginx_sites:
          formjonc:
            template: formjonc.conf.j2
        ansible_become: true
      tags: nginx
